/*
 * OpenAI API
 *
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * API version: 2.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package main

import (
	"log"
	"net/http"

	// WARNING!
	// Change this to a fully-qualified import path
	// once you place this file into your project.
	// For example,
	//
	//    sw "github.com/myname/myrepo/go"
	//
	"os"

	sw "github.com/Karenelise07/GoAIProxy/go"
	"github.com/gorilla/handlers"
)

func main() {
	log.Printf("Server started")
	// Open or create a log file
	logFile, err := os.OpenFile("server.log", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)
	if err != nil {
		log.Fatalf("Failed to open log file: %v", err)
	}
	defer logFile.Close()
	// Set log output to the file
	log.SetOutput(logFile)

	router := sw.NewRouter()
	// 配置CORS
	corsHandler := handlers.CORS(
		handlers.AllowedOrigins([]string{"*"}),                                                 // 允许所有域，注意这在生产环境中可能是不安全的
		handlers.AllowedMethods([]string{"GET", "POST", "PUT", "DELETE", "OPTIONS"}),           // 允许的HTTP方法
		handlers.AllowedHeaders([]string{"X-Requested-With", "Content-Type", "Authorization"}), // 允许的头部
	)

	// 应用CORS中间件到路由器，并启动HTTP服务
	log.Fatal(http.ListenAndServe(":8083", corsHandler(router)))

	log.Fatal(http.ListenAndServe(":8083", router))
}
